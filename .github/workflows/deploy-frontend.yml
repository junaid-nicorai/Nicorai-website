name: Deploy Frontend to S3 and CloudFront (MVP)

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build NextJS app
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          # Add optimization flags for production build
          NODE_ENV: production
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Copy files to S3 bucket (with gzip)
        run: |
          # Sync non-compressible assets normally
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --exclude "*.html" --exclude "*.js" --exclude "*.css" --exclude "*.json" --exclude "*.xml" --exclude "*.svg"
          
          # Sync compressible files with gzip for better performance and lower transfer costs
          aws s3 sync out/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --include "*.html" --include "*.js" --include "*.css" --include "*.json" --include "*.xml" --include "*.svg" \
            --content-encoding gzip \
            --content-type text/html \
            --metadata-directive REPLACE
      
      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
      
      - name: Report deployment status
        run: |
          echo "Frontend deployed successfully!"
          echo "URL: https://${{ secrets.CLOUDFRONT_DOMAIN_NAME || secrets.S3_BUCKET_NAME }}.s3-website-${{ secrets.AWS_REGION }}.amazonaws.com/"
