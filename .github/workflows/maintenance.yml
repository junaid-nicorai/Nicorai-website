name: Frontend Infrastructure Maintenance Check

on:
  schedule:
    - cron: '0 6 * * MON' # Runs at 6:00 AM every Monday
  workflow_dispatch: # Manual trigger

jobs:
  check-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
        - name: Check S3 bucket
        run: |
          S3_EXISTS=$(aws s3api head-bucket --bucket ${{ secrets.S3_BUCKET_NAME }} 2>&1 || echo "error")
          
          if [[ "$S3_EXISTS" == *"error"* ]]; then
            echo "::warning::S3 bucket check failed"
            echo "S3_STATUS=❌ Not Accessible" >> $GITHUB_ENV
          else
            echo "S3 bucket is accessible"
            echo "S3_STATUS=✅ Accessible" >> $GITHUB_ENV
          fi
          
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> $GITHUB_ENV
      
      - name: Check CloudFront distribution
        run: |
          CF_STATUS=$(aws cloudfront get-distribution \
            --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --query 'Distribution.Status' --output text)
          
          echo "CloudFront Status: $CF_STATUS"
          
          if [[ "$CF_STATUS" != "Deployed" ]]; then
            echo "::warning::CloudFront distribution is not deployed: $CF_STATUS"
            echo "CF_STATUS=❌ $CF_STATUS" >> $GITHUB_ENV
          else
            echo "CF_STATUS=✅ Deployed" >> $GITHUB_ENV
          fi
          
          echo "CLOUDFRONT_DOMAIN_NAME=${{ secrets.CLOUDFRONT_DOMAIN_NAME }}" >> $GITHUB_ENV
          
      - name: Check CloudFront error page configuration
        run: |
          ERROR_PAGES=$(aws cloudfront get-distribution \
            --id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --query 'Distribution.DistributionConfig.CustomErrorResponses.Items' --output json)
          
          echo "CloudFront Error Pages Configuration:"
          echo "$ERROR_PAGES" | jq
          
          # Check if error pages are configured for 403 and 404
          ERROR_403=$(echo "$ERROR_PAGES" | jq '.[] | select(.ErrorCode==403)')
          ERROR_404=$(echo "$ERROR_PAGES" | jq '.[] | select(.ErrorCode==404)')
          
          if [[ -z "$ERROR_403" || -z "$ERROR_404" ]]; then
            echo "::warning::CloudFront is missing error page configuration for client-side routing. This may affect Next.js routing."
          else
            echo "CloudFront error pages are properly configured for Next.js routing."
          fi
        - name: Send status report
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { GITHUB_REPOSITORY, GITHUB_RUN_ID } = process.env;
            const runUrl = `https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}`;
            
            // Get S3 status
            const s3Status = process.env.S3_STATUS || 'Unknown';
            
            // Get CloudFront status
            const cfStatus = process.env.CF_STATUS || 'Unknown';
            
            const body = `## Weekly Frontend Infrastructure Status Report
            
            | Service | Status | Details |
            |---------|--------|---------|
            | S3 Bucket | ${s3Status} | ${process.env.S3_BUCKET_NAME} |
            | CloudFront | ${cfStatus} | ${process.env.CLOUDFRONT_DOMAIN_NAME} |
            | Workflow Run | Completed | [View Run](${runUrl}) |
            | Date | ${new Date().toISOString()} | UTC |
            
            This is an automated status check of the frontend infrastructure. View the workflow run for detailed status information.`;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Frontend Infrastructure Status: ${new Date().toLocaleDateString()}`,
              body: body,
              labels: ['status-report', 'frontend']
            });
